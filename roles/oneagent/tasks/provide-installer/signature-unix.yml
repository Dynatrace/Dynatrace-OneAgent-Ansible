---
- name: Check if CA certificate exists
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{ oneagent_ca_cert_src_path }}"
  register: _oneagent_ca_cert_state

- name: Transfer CA certificate
  ansible.builtin.copy:
    src: "{{ oneagent_ca_cert_src_path }}"
    dest: "{{ oneagent_ca_cert_dest_path }}"
    mode: "0644"
  when: not (oneagent_force_cert_download | default(false)) and _oneagent_ca_cert_state.stat.exists

- name: Download CA certificate
  ansible.builtin.get_url:
    url: "{{ oneagent_ca_cert_download_url }}"
    dest: "{{ oneagent_ca_cert_dest_path }}"
    mode: "0644"
    validate_certs: "{{ oneagent_validate_certs | default(true) }}"
  environment:
    SSL_CERT_FILE: "{{ oneagent_ca_cert_download_cert | default(omit) }}"
  when: oneagent_force_cert_download | default(false) or not _oneagent_ca_cert_state.stat.exists
  changed_when: false

- name: Validate installer signature
  ansible.builtin.shell: >
    ( printf '%s\n' '{{ oneagent_certificate_verification_header }}';
    printf '\n\n----SIGNED-INSTALLER\n'; cat "{{ oneagent_installer_path }}" ) |
    {{ oneagent_additional_openssl_env | default('') }} openssl cms -verify -CAfile "{{ oneagent_ca_cert_dest_path }}" > /dev/null
  no_log: "{{ oneagent_no_log }}"
  ignore_errors: true
  changed_when: false
  register: _oneagent_cert_verification_result

- name: Installer signature validation result
  ansible.builtin.fail:
    msg: "{{ oneagent_signature_verification_failed | format(_oneagent_cert_verification_result.stderr) }}"
  when: _oneagent_cert_verification_result.rc != 0
